"""
Django settings for oniloan project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

# python
import ast
import os
from datetime import timedelta
from pathlib import Path

# third party
from dotenv import load_dotenv
load_dotenv()


# project
HOST = os.getenv('HOST')
DOMAIN = os.getenv('DOMAIN')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
# https://docs.djangoproject.com/en/3.1/ref/settings/#debug
DEBUG = ast.literal_eval(os.getenv('DEBUG', 'True'))

# https://docs.djangoproject.com/en/3.1/ref/settings/#admins
ADMINS = []

# https://docs.djangoproject.com/en/3.1/ref/settings/#managers
MANAGERS = ADMINS

# https://docs.djangoproject.com/en/3.1/ref/settings/#allowed-hosts
ALLOWED_HOSTS = ['*'] if DEBUG else [HOST, DOMAIN]

# SECURITY WARNING: keep the secret key used in production secret!
# https://docs.djangoproject.com/en/3.1/ref/settings/#secret-key
SECRET_KEY = os.getenv('SECRET_KEY')

# https://docs.djangoproject.com/en/3.1/ref/settings/#root-urlconf
ROOT_URLCONF = 'oniloan.urls'


# ### DATABASE ###
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB'),
        'USER': os.getenv('POSTGRES_USER'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
        'HOST': os.getenv('POSTGRES_HOST'),
        'PORT': os.getenv('POSTGRES_PORT')
    }
}


# ### EMAIL ###

# https://docs.djangoproject.com/pt-br/3.1/ref/settings/#email-host
EMAIL_HOST = os.getenv('EMAIL_HOST')

# https://docs.djangoproject.com/pt-br/3.1/ref/settings/#default-from-email
# DEFAULT_FROM_EMAIL = ''

# https://docs.djangoproject.com/pt-br/3.1/ref/settings/#std:setting-SERVER_EMAIL
# SERVER_EMAIL = DEFAULT_FROM_EMAIL


# ### APPLICATION DEFINITION ###
# https://docs.djangoproject.com/en/3.1/ref/settings/#installed-apps

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third party
    'axes',
    'django_extensions',
    'django_filters',
    'rest_framework',

    # project
    'core',
    'loans'
]


# ### MIDDLEWARE ###

# https://docs.djangoproject.com/en/3.1/ref/settings/#middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # AxesMiddleware should be the last middleware in the MIDDLEWARE list.
    # It only formats user lockout messages and renders Axes lockout responses
    # on failed user authentication attempts from login views.
    # If you do not want Axes to override the authentication response
    # you can skip installing the middleware and use your own views.
    'axes.middleware.AxesMiddleware'
]


# ### TEMPLATES ###
# https://docs.djangoproject.com/en/3.1/ref/settings/#templates

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages'
            ]
        }
    }
]


# ### WSGI ####
# https://docs.djangoproject.com/en/3.1/ref/settings/#wsgi-application

WSGI_APPLICATION = 'oniloan.wsgi.application'


# ### AUTH ###
# https://django-two-factor-auth.readthedocs.io/en/stable/index.html

# https://docs.djangoproject.com/en/3.1/ref/settings/#authentication-backends
AUTHENTICATION_BACKENDS = [
    # AxesBackend should be the first backend in the AUTHENTICATION_BACKENDS list.
    'axes.backends.AxesBackend',

    # Django ModelBackend is the default authentication backend.
    'django.contrib.auth.backends.ModelBackend'
]

# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 9
        }
    },
    {
        'NAME': 'core.validators.MinimumLowerCaseValidator',
        'OPTIONS': {
            'min_length': 1
        }
    },
    {
        'NAME': 'core.validators.MinimumUpperCaseValidator',
        'OPTIONS': {
            'min_length': 1
        }
    },
    {
        'NAME': 'core.validators.MinimumNumberValidator',
        'OPTIONS': {
            'min_length': 1
        }
    },
    {
        'NAME': 'core.validators.MinimumSpecialCharactersValidator',
        'OPTIONS': {
            'min_length': 1
        }
    }
]


# ### SECURITY ###

# https://docs.djangoproject.com/en/3.1/ref/settings/#secure-proxy-ssl-header
SECURE_PROXY_SSL_HEADER = None if DEBUG else ('HTTP_X_FORWARDED_PROTO', 'https')

# https://docs.djangoproject.com/en/3.1/ref/settings/#use-x-forwarded-host
USE_X_FORWARDED_HOST = False if DEBUG else True

# https://docs.djangoproject.com/en/3.1/ref/settings/#use-x-forwarded-port
USE_X_FORWARDED_PORT = False if DEBUG else True


# ### SESSIONS ###

# https://docs.djangoproject.com/en/3.1/ref/settings/#session-cookie-secure
SESSION_COOKIE_SECURE = False if DEBUG else True

# https://docs.djangoproject.com/en/3.1/ref/settings/#session-engine
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

# https://docs.djangoproject.com/en/3.1/ref/settings/#session-expire-at-browser-close
SESSION_EXPIRE_AT_BROWSER_CLOSE = False if DEBUG else True


# ### STATIC FILES (CSS, JavaScript, Images) ###
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# https://docs.djangoproject.com/en/3.1/ref/settings/#static-root
# STATIC_BASE_DIR = BASE_DIR
# STATIC_ROOT_PATH = 'static/'
# STATIC_ROOT = os.path.join(STATIC_BASE_DIR, 'static/')

# https://docs.djangoproject.com/en/3.1/ref/settings/#static-url
STATIC_URL = '/static/'

# https://docs.djangoproject.com/en/3.1/ref/settings/#staticfiles-dirs
STATICFILES_DIRS = [
    BASE_DIR / 'static',
    BASE_DIR / 'front/dist'
]


# ### MEDIA FILES ###
# https://docs.djangoproject.com/en/3.1/ref/settings/#file-uploads

# https://docs.djangoproject.com/en/3.1/ref/settings/#media-root
# MEDIA_BASE_DIR = BASE_DIR
# MEDIA_ROOT_PATH = 'media/'
# MEDIA_ROOT = os.path.join(MEDIA_BASE_DIR, MEDIA_ROOT_PATH)

# https://docs.djangoproject.com/en/3.1/ref/settings/#media-url
MEDIA_URL = '/media/'


# ### INTERNATIONALIZATION ###
# https://docs.djangoproject.com/en/3.1/topics/i18n/

# https://docs.djangoproject.com/en/3.1/ref/settings/#use-i18n
USE_I18N = True

# https://docs.djangoproject.com/en/3.1/ref/settings/#use-l10n
USE_L10N = True

# https://docs.djangoproject.com/en/3.1/ref/settings/#language-code
LANGUAGE_CODE = 'pt-br'


# ### TIME ZONE ###

# https://docs.djangoproject.com/en/3.1/ref/settings/#std:setting-TIME_ZONE
TIME_ZONE = 'America/Fortaleza'

# https://docs.djangoproject.com/en/3.1/ref/settings/#use-tz
USE_TZ = True


# ### LOGGING ###
# https://docs.djangoproject.com/en/3.1/topics/logging/

LOG_BASE_DIR = '/tmp' if DEBUG else 'logs'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'syslog': {
            'format': '%(process)d %(thread)d %(name)s %(levelname)s %(message)s'
        },
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        }
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        }
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'filters': ['require_debug_true'],
            'formatter': 'verbose'
        },
        'django_file': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_BASE_DIR, 'django-error.log'),
            'formatter': 'syslog',
            'maxBytes': 1000 * 1024 * 1024,  # 1 GB
            'backupCount': 10
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'django_file', 'mail_admins'],
            'level': 'INFO'
        }
    }
}


# ### DJANGO AXES ###
# https://django-axes.readthedocs.io/en/latest/index.html

AXES_ENABLED = not DEBUG
AXES_FAILURE_LIMIT = 5
AXES_COOLOFF_TIME = 3
# AXES_LOCK_OUT_AT_FAILURE = True
# AXES_ONLY_ADMIN_SITE = False
# AXES_ONLY_USER_FAILURES = False
# AXES_ENABLE_ADMIN = True
AXES_LOCK_OUT_BY_COMBINATION_USER_AND_IP = True
AXES_VERBOSE = True
AXES_USERNAME_FORM_FIELD = 'username'
# AXES_IP_WHITELIST = ['0.0.0.0']
AXES_RESET_ON_SUCCESS = True
AXES_META_PRECEDENCE_ORDER = [
    'HTTP_X_FORWARDED_FOR',
    'REMOTE_ADDR'
]


# ### DJANGO REST FRAMEWORK ###
# https://www.django-rest-framework.org/

REST_FRAMEWORK = {
    'PAGE_SIZE': 20,
    'MAX_PAGE_SIZE': 100,
    'DEFAULT_PAGINATION_CLASS': 'core.pagination.PageNumberPagination',

    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter'
    ],

    # session auth is adequate for ajax requests
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication'
    ],

    # by default, only authenticated users may use the API
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated'
    ]
}


# ### DRF SIMPLE JWT TOKEN AUTHORIZATION ###

# https://github.com/SimpleJWT/django-rest-framework-simplejwt
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1)
}


# ### DJANGO JS REVERSE ###
# https://django-js-reverse.readthedocs.io/en/stable/#options

JS_REVERSE_JS_VAR_NAME = 'dj_urls'
JS_REVERSE_EXCLUDE_NAMESPACES = ['admin']


# LOCAL SETTINGS

try:
    from .local_settings import *
    try:
        INSTALLED_APPS += LOCAL_INSTALLED_APPS  # noqa: F405
        MIDDLEWARE += LOCAL_MIDDLEWARE  # noqa: F405
    except NameError:
        pass
except ImportError:
    pass
